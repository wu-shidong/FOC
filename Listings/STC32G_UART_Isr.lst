C251 COMPILER V5.60.0,  STC32G_UART_Isr                                                    28/06/23  11:21:05  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_UART_Isr
OBJECT MODULE PLACED IN .\Objects\STC32G_UART_Isr.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE Lib\STC32G_UART_Isr.c LARGE INTR2 BROWSE INCDIR(.\Application;.\Bsp;.\
                    -Componenets;.\Lib) DEBUG PRINT(.\Listings\STC32G_UART_Isr.lst) TABS(2) OBJECT(.\Objects\STC32G_UART_Isr.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCAI.com ---------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   10          /* --- QQ:  800003751 -------------------------------------------------*/
   11          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   12          /*---------------------------------------------------------------------*/
   13          
   14          #include "STC32G_UART.h"
   15          
   16          bit B_ULinRX1_Flag;
   17          bit B_ULinRX2_Flag;
   18          
   19          //========================================================================
   20          // 函数: UART1_ISR_Handler
   21          // 描述: UART1中断函数.
   22          // 参数: none.
   23          // 返回: none.
   24          // 版本: V1.0, 2020-09-23
   25          //========================================================================
   26          #ifdef UART1
   27          void UART1_ISR_Handler (void) interrupt UART1_VECTOR
   28          {
   29   1        u8 Status;
   30   1      
   31   1        if(RI)
   32   1        {
   33   2          RI = 0;
   34   2      
   35   2          //--------USART LIN---------------
   36   2          Status = USARTCR5;
   37   2          if(Status & 0x02)     //if LIN header is detected
   38   2          {
   39   3            B_ULinRX1_Flag = 1;
   40   3          }
   41   2      
   42   2          if(Status & 0xc0)     //if LIN break is detected / LIN header error is detected
   43   2          {
   44   3            COM1.RX_Cnt = 0;
   45   3          }
   46   2          USARTCR5 &= ~0xcb;    //Clear flag
   47   2          //--------------------------------
   48   2          
   49   2              if(COM1.RX_Cnt >= COM_RX1_Lenth)  COM1.RX_Cnt = 0;
   50   2              RX1_Buffer[COM1.RX_Cnt++] = SBUF;
   51   2              COM1.RX_TimeOut = TimeOutSet1;
   52   2        }
   53   1      
   54   1        if(TI)
   55   1        {
   56   2          TI = 0;
   57   2          
   58   2              #if(UART_QUEUE_MODE == 1)   //判断是否使用队列模式
C251 COMPILER V5.60.0,  STC32G_UART_Isr                                                    28/06/23  11:21:05  PAGE 2   

   59   2          if(COM1.TX_send != COM1.TX_write)
   60   2          {
   61   3            SBUF = TX1_Buffer[COM1.TX_send];
   62   3            if(++COM1.TX_send >= COM_TX1_Lenth)   COM1.TX_send = 0;
   63   3          }
   64   2          else  COM1.B_TX_busy = 0;
   65   2              #else
                       COM1.B_TX_busy = 0;     //使用阻塞方式发送直接清除繁忙标志
                       #endif
   68   2        }
   69   1      }
   70          #endif
   71          
   72          //========================================================================
   73          // 函数: UART2_ISR_Handler
   74          // 描述: UART2中断函数.
   75          // 参数: none.
   76          // 返回: none.
   77          // 版本: V1.0, 2020-09-23
   78          //========================================================================
   79          #ifdef UART2
   80          void UART2_ISR_Handler (void) interrupt UART2_VECTOR
   81          {
   82   1        u8 Status;
   83   1      
   84   1        if(S2RI)
   85   1        {
   86   2          CLR_RI2();
   87   2      
   88   2          //--------USART LIN---------------
   89   2          Status = USART2CR5;
   90   2          if(Status & 0x02)     //if LIN header is detected
   91   2          {
   92   3            B_ULinRX2_Flag = 1;
   93   3          }
   94   2      
   95   2          if(Status & 0xc0)     //if LIN break is detected / LIN header error is detected
   96   2          {
   97   3            COM2.RX_Cnt = 0;
   98   3          }
   99   2          USART2CR5 &= ~0xcb;   //Clear flag
  100   2          //--------------------------------
  101   2          
  102   2              if(COM2.RX_Cnt >= COM_RX2_Lenth)  COM2.RX_Cnt = 0;
  103   2              RX2_Buffer[COM2.RX_Cnt++] = S2BUF;
  104   2              COM2.RX_TimeOut = TimeOutSet2;
  105   2        }
  106   1      
  107   1        if(S2TI)
  108   1        {
  109   2          CLR_TI2();
  110   2          
  111   2              #if(UART_QUEUE_MODE == 1)   //判断是否使用队列模式
  112   2          if(COM2.TX_send != COM2.TX_write)
  113   2          {
  114   3            S2BUF = TX2_Buffer[COM2.TX_send];
  115   3            if(++COM2.TX_send >= COM_TX2_Lenth)   COM2.TX_send = 0;
  116   3          }
  117   2          else  COM2.B_TX_busy = 0;
  118   2              #else
                       COM2.B_TX_busy = 0;     //使用阻塞方式发送直接清除繁忙标志
                       #endif
  121   2        }
  122   1      }
  123          #endif
  124          
C251 COMPILER V5.60.0,  STC32G_UART_Isr                                                    28/06/23  11:21:05  PAGE 3   

  125          //========================================================================
  126          // 函数: UART3_ISR_Handler
  127          // 描述: UART3中断函数.
  128          // 参数: none.
  129          // 返回: none.
  130          // 版本: V1.0, 2020-09-23
  131          //========================================================================
  132          #ifdef UART3
  133          void UART3_ISR_Handler (void) interrupt UART3_VECTOR
  134          {
  135   1        if(S3RI)
  136   1        {
  137   2          CLR_RI3();
  138   2      
  139   2              if(COM3.RX_Cnt >= COM_RX3_Lenth)  COM3.RX_Cnt = 0;
  140   2              RX3_Buffer[COM3.RX_Cnt++] = S3BUF;
  141   2              COM3.RX_TimeOut = TimeOutSet3;
  142   2        }
  143   1      
  144   1        if(S3TI)
  145   1        {
  146   2          CLR_TI3();
  147   2          
  148   2              #if(UART_QUEUE_MODE == 1)   //判断是否使用队列模式
  149   2          if(COM3.TX_send != COM3.TX_write)
  150   2          {
  151   3            S3BUF = TX3_Buffer[COM3.TX_send];
  152   3            if(++COM3.TX_send >= COM_TX3_Lenth)   COM3.TX_send = 0;
  153   3          }
  154   2          else  COM3.B_TX_busy = 0;
  155   2              #else
                       COM3.B_TX_busy = 0;     //使用阻塞方式发送直接清除繁忙标志
                       #endif
  158   2        }
  159   1      }
  160          #endif
  161          
  162          //========================================================================
  163          // 函数: UART4_ISR_Handler
  164          // 描述: UART4中断函数.
  165          // 参数: none.
  166          // 返回: none.
  167          // 版本: V1.0, 2020-09-23
  168          //========================================================================
  169          #ifdef UART4
  170          void UART4_ISR_Handler (void) interrupt UART4_VECTOR
  171          {
  172   1        if(S4RI)
  173   1        {
  174   2          CLR_RI4();
  175   2      
  176   2              if(COM4.RX_Cnt >= COM_RX4_Lenth)  COM4.RX_Cnt = 0;
  177   2              RX4_Buffer[COM4.RX_Cnt++] = S4BUF;
  178   2              COM4.RX_TimeOut = TimeOutSet4;
  179   2        }
  180   1      
  181   1        if(S4TI)
  182   1        {
  183   2          CLR_TI4();
  184   2          
  185   2              #if(UART_QUEUE_MODE == 1)   //判断是否使用队列模式
  186   2          if(COM4.TX_send != COM4.TX_write)
  187   2          {
  188   3            S4BUF = TX4_Buffer[COM4.TX_send];
  189   3            if(++COM4.TX_send >= COM_TX4_Lenth)   COM4.TX_send = 0;
  190   3          }
C251 COMPILER V5.60.0,  STC32G_UART_Isr                                                    28/06/23  11:21:05  PAGE 4   

  191   2          else  COM4.B_TX_busy = 0;
  192   2              #else
                       COM4.B_TX_busy = 0;     //使用阻塞方式发送直接清除繁忙标志
                       #endif
  195   2        }
  196   1      }
  197          #endif


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       554     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =         2     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
