C251 COMPILER V5.60.0,  bsp_can                                                            03/07/23  06:55:18  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE bsp_can
OBJECT MODULE PLACED IN .\Objects\bsp_can.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE Bsp\bsp_can.c LARGE INTR2 BROWSE INCDIR(.\Application;.\Bsp;.\Componen
                    -ets;.\Lib;.\Devices) DEBUG PRINT(.\Listings\bsp_can.lst) TABS(2) OBJECT(.\Objects\bsp_can.obj) 

stmt  level    source

    1          #include "bsp_can.h"
    2          #include  "STC32G_NVIC.h"
    3          
    4          void CAN_config(void)
    5          {
    6   1        CAN_InitTypeDef CAN_InitStructure;          //结构定义
    7   1      
    8   1        CAN_InitStructure.CAN_Enable = ENABLE;    //CAN功能使能   ENABLE或DISABLE
    9   1        CAN_InitStructure.CAN_IMR    = CAN_ALLIM; //CAN中断寄存器   CAN_DOIM,CAN_BEIM,CAN_TIM,CAN_RIM,CAN_EPIM,CA
             -N_EWIM,CAN_ALIM,CAN_ALLIM,DISABLE
   10   1        CAN_InitStructure.CAN_SJW    = 0;         //重新同步跳跃宽度  0~3
   11   1        CAN_InitStructure.CAN_SAM    = 0;         //总线电平采样次数  0:采样1次; 1:采样3次
   12   1      
   13   1      //  //CAN总线波特率=Fclk/((1+(TSG1+1)+(TSG2+1))*(BRP+1)*2)
   14   1      //  CAN_InitStructure.CAN_TSG1   = 2;         //同步采样段1       0~15
   15   1      //  CAN_InitStructure.CAN_TSG2   = 1;         //同步采样段2       1~7 (TSG2 不能设置为0)
   16   1      //  CAN_InitStructure.CAN_BRP    = 3;         //波特率分频系数    0~63
   17   1      //  //24000000/((1+3+2)*4*2)=500KHz
   18   1        //CAN总线波特率=Fclk/((1+(TSG1+1)+(TSG2+1))*(BRP+1)*2)
   19   1        CAN_InitStructure.CAN_TSG1   = 2;         //同步采样段1       0~15
   20   1        CAN_InitStructure.CAN_TSG2   = 2;         //同步采样段2       1~7 (TSG2 不能设置为0)
   21   1        CAN_InitStructure.CAN_BRP    = 4;         //波特率分频系数    0~63
   22   1        //35000000/((1+3+3)*5*2)=500KHz 
   23   1        
   24   1      
   25   1        CAN_InitStructure.CAN_ACR0    = 0x00;     //总线验收代码寄存器 0~0xFF
   26   1        CAN_InitStructure.CAN_ACR1    = 0x00;
   27   1        CAN_InitStructure.CAN_ACR2    = 0x00;
   28   1        CAN_InitStructure.CAN_ACR3    = 0x00;
   29   1        CAN_InitStructure.CAN_AMR0    = 0xff;     //总线验收屏蔽寄存器 0~0xFF
   30   1        CAN_InitStructure.CAN_AMR1    = 0xff;
   31   1        CAN_InitStructure.CAN_AMR2    = 0xff;
   32   1        CAN_InitStructure.CAN_AMR3    = 0xff;
   33   1        CAN_Inilize(CAN1,&CAN_InitStructure);     //CAN1 初始化
   34   1      //  CAN_Inilize(CAN2,&CAN_InitStructure);     //CAN2 初始化
   35   1        
   36   1        NVIC_CAN_Init(CAN1,ENABLE,Priority_1);    //中断使能, CAN1/CAN2; ENABLE/DISABLE; 优先级(低到高) Priority_0
             -,Priority_1,Priority_2,Priority_3
   37   1      //  NVIC_CAN_Init(CAN2,ENABLE,Priority_1);    //中断使能, CAN1/CAN2; ENABLE/DISABLE; 优先级(低到高) Priority
             -_0,Priority_1,Priority_2,Priority_3
   38   1      }
   39          
   40          
   41          
   42          
   43          
   44          void can1_reset(void)
   45          {
   46   1        CAN1_Tx.FF = STANDARD_FRAME;    //标准帧
   47   1        CAN1_Tx.RTR = 0;                //0：数据帧，1：远程帧
   48   1        CAN1_Tx.DLC = 0x08;             //数据长度
   49   1        CAN1_Tx.ID = 0x201;            //CAN ID
   50   1        CAN1_Tx.DataBuffer[0] = 0x00;   //数据内容
   51   1        CAN1_Tx.DataBuffer[1] = 0x00;
   52   1        CAN1_Tx.DataBuffer[2] = 0x00;
   53   1        CAN1_Tx.DataBuffer[3] = 0x00;
   54   1        CAN1_Tx.DataBuffer[4] = 0x00;
   55   1        CAN1_Tx.DataBuffer[5] = 0x00;
C251 COMPILER V5.60.0,  bsp_can                                                            03/07/23  06:55:18  PAGE 2   

   56   1        CAN1_Tx.DataBuffer[6] = 0x00;
   57   1        CAN1_Tx.DataBuffer[7] = 0x00;
   58   1      }
   59          
   60          
   61          void can1_send_data(u32 ID,u16 ecd,int16 speed_rpm,int16 current,u16 int_s)
   62          {
   63   1        CAN1_Tx.FF = STANDARD_FRAME;    //标准帧
   64   1        CAN1_Tx.RTR = 0;                //0：数据帧，1：远程帧
   65   1        CAN1_Tx.DLC = 0x08;             //数据长度
   66   1        CAN1_Tx.ID = ID;            //CAN ID
   67   1        CAN1_Tx.DataBuffer[0] = ecd>>8;   //数据内容
   68   1        CAN1_Tx.DataBuffer[1] = ecd;
   69   1        CAN1_Tx.DataBuffer[2] = speed_rpm>>8;
   70   1        CAN1_Tx.DataBuffer[3] = speed_rpm;
   71   1        CAN1_Tx.DataBuffer[4] = current>>8;
   72   1        CAN1_Tx.DataBuffer[5] = current;
   73   1        CAN1_Tx.DataBuffer[6] = int_s>>8;
   74   1        CAN1_Tx.DataBuffer[7] = int_s;
   75   1      
   76   1        CANSEL = CAN1;    //选择CAN1模块 
   77   1        if(CanReadReg(SR) & 0x01)   //判断是否有 BS:BUS-OFF状态
   78   1        {
   79   2          CANAR = MR;
   80   2          CANDR &= ~0x04;  //清除 Reset Mode, 从BUS-OFF状态退出
   81   2        }
   82   1        else
   83   1        {
   84   2          CanSendMsg(&CAN1_Tx);   //发送一帧数据
   85   2        }
   86   1      }
   87          
   88          
   89          
   90          
   91          
   92          
   93          
   94          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       313     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------         19
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
